name: beta2

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5  # Give some time for the download to complete

    # Default, optional.
    - name: Enable TS
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Set password for runneradmin
      run: |
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.MASTER_PASSWORD }}" -Force)

    # Run wallpaper.bat file (assuming it's located in the root directory of your repository)
    - name: Run wallpaper.bat
      run: |
        Start-Process -FilePath "$env:GITHUB_WORKSPACE\wallpaper.bat" -NoNewWindow -Wait

    # Run startup.bat file (assuming it's located in the root directory of your repository)
    - name: Run startup.bat
      run: |
        Start-Process -FilePath "$env:GITHUB_WORKSPACE\startup.bat" -NoNewWindow -Wait

    # Add custom user with full name as username (only if the user does not exist)
    - name: Add custom user
      run: |
        $username = "Admin"
        $password = ConvertTo-SecureString "${{ secrets.MASTER_PASSWORD }}" -AsPlainText -Force
        if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $username -Password $password -FullName $username -Description "Custom user for RDP access"
            Add-LocalGroupMember -Group "Administrators" -Member $username  # Add to Administrators group
        } else {
            Write-Host "User $username already exists"
        }

    - name: Start Playit and Set Up RDP Tunnel
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        # Start Playit with the provided secret key
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow -Wait
        Start-Sleep -Seconds 5  # Ensure Playit is up and running before proceeding
        # Run Playit again to keep the tunnel open
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -NoNewWindow

    # Optionally, configure the firewall to allow RDP from a specific IP (for added security)
    - name: Configure Windows Firewall for RDP
      run: |
        New-NetFirewallRule -DisplayName "Allow RDP from specific IP" -Direction Inbound -Protocol TCP -LocalPort 3389 -RemoteAddress "192.168.1.100" -Action Allow
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    # Prevent the workflow from stopping by keeping the runner alive
    - name: Keep the GitHub Action Runner Alive
      run: |
        while ($true) {
            Start-Sleep -Seconds 60  # Sleep in intervals to keep the runner alive
        }
